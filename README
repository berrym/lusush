LUSUSH

==== OVERVIEW

    Lusush is a shell for the UNIX environment.  It is simple and essentially
    featureless.  Originally developed as an educational experience to gain
    more familiarity with programming in an UNIX environment, that is what the
    project remains today.

    Lusush is useless for most people.  It has no job control, no scripting
    language, and basically lacks most features that people require from a
    shell.

    Should anybody find lusush or it's source code useful, perhaps as a `How
    Not To' guide in the world of UNIX programming, please let me know.

==== INSTALLATION

    Lusush now uses the Meson build system.
    
    Basic build/installation can be achieved with the following commands.

    git clone://https://bitbucket.org/berrym/lusush.git
    cd lusush
    meson build
    ninja -C build

    Optionally:

    ninja -C build install

==== BASIC USAGE

    Lusush can be run as a login shell or interactively.  You type commands
    and lusush will attempt to locate them, then execute them.

    Upon running lusush you will be greeted with a prompt, unless the
    environment variable PROMPT is set it will be a percent sign.

    %

    To see a complete list of builtin commands and their description, run help.

    % help

    You may also run help followed by an optional command you specifically want
    to see some information on.

    % help pwd

    If you wish to use the I/O redirection features of lusush, it's the same as
    typical shell convention

    % ls > tmp
    % cat < tmp > tmp2


    For output redirection you can choose to append to a file as an alternative
    to overwriting if you wish by using the >> operator instead of >.

    % echo 1 > testfile            # this will overwrite testfile
    % echo 2 >> testfile           # this will append to testfile

    To set an environment variable use the setenv command.

    % setenv MYVAR testing123

    And to delete an environment variable use unsetenv.

    % unsetenv MYVAR

    Commands can be chained together so they are executed one after the other
    by inserting a semicolon between them.

    % echo 1 ; echo 2 ; echo 3 ; echo 4 ; echo 5

    Note that while the above commands will be executed in order from left
    to right lusush makes no effort to gaurantee that the commands will
    finish executing in order.

    The output of a command can be piped into the input of another by using
    pipes.

    % ps ax | grep sh

    Chained pipes are allowed.

    % ps ax | grep sh | more
    % ls -alF |less

    Lusush can read from a file with commands in it and execute those commands.
    This is a basic form of scripting but it works.  To do it, invoke lusush
    with the script as a parameter.

    % lusush somefile

    Lusush supports aliased commands.

    % alias say-hi echo Hello, world!

    Aliases can be removed using the command unalias.

    % unalias say-hi

    Lusush supports modifiable runtime behavior via command line switches
    at startup, or the use of the setopt command.  For a complete list of
    switches run lusush -h.

    Options can be toggled on or off interactively.

    To turn an option on.

    % setopt OPTION

    To turn an option off.

    % unsetopt OPTION

    Lusush can have a color prompt on terminals that support it.

    % setopt FANCY_PROMPT

    The fancy prompt can be invoked with the command line switch -c at startup.
    The prompt colors can be modified using the setprompt command.

    % setprompt -f GREEN -b BLACK -a BOLD

    Control-C (SIGINT) is ignored by default to allow for normal operation
    of external programs executed by lusush, use exit to leave the shell.

Copyright (c) 2015
Michael Berry <trismegustis@gmail.com>
