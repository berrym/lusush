#!/bin/bash

# LUSUSH PROMPT LENGTH FIX TEST
# Verifies that backspace and history navigation don't delete backward in the prompt

set -e

echo "==============================================================================="
echo "LUSUSH PROMPT LENGTH FIX VERIFICATION"
echo "==============================================================================="
echo ""
echo "This test verifies that the prompt length fix is working correctly."
echo "The issue was that backspace and history navigation were deleting backward"
echo "into the prompt itself, before the directory expansion."
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

LUSUSH_BIN="./builddir/lusush"

# Check if lusush binary exists
if [ ! -f "$LUSUSH_BIN" ]; then
    echo -e "${RED}ERROR: lusush binary not found at $LUSUSH_BIN${NC}"
    echo "Please build lusush first with: ninja -C builddir"
    exit 1
fi

echo -e "${BLUE}STEP 1: UNDERSTANDING THE ISSUE${NC}"
echo "==============================================================================="
echo ""
echo "The problem was in the linenoise.c functions:"
echo "- linenoiseEditBackspace() was using l->plen (calculated column width)"
echo "- linenoiseEditHistoryNext() was using l->plen (calculated column width)"
echo ""
echo "But they should use strlen(l->prompt) (actual string length) when writing"
echo "the prompt to the terminal."
echo ""
echo "This caused deletion to go backward into the prompt itself, deleting"
echo "characters before the directory expansion (like username@hostname)."
echo ""

echo -e "${BLUE}STEP 2: VISUAL PROMPT ANALYSIS${NC}"
echo "==============================================================================="
echo ""
echo "Let's examine what a typical lusush prompt looks like:"
echo ""
echo "Example prompt structure:"
echo "  [user@hostname in /current/directory (git:branch)] $ "
echo "  ^-- This part should NEVER be deleted by backspace or history"
echo ""
echo "The prompt contains:"
echo "- ANSI color codes (invisible to user but count in string length)"
echo "- Username and hostname"
echo "- Current directory path"
echo "- Git branch information (if in git repo)"
echo "- Final prompt symbol"
echo ""

echo -e "${BLUE}STEP 3: INTERACTIVE TESTING${NC}"
echo "==============================================================================="
echo ""
echo "We'll now test both operations that were problematic:"
echo ""
echo "TEST 1: BACKSPACE OPERATION"
echo "- Type some text after the prompt"
echo "- Use backspace to delete characters"
echo "- Verify backspace ONLY deletes your typed text"
echo "- Verify backspace NEVER deletes the prompt itself"
echo ""
echo "TEST 2: HISTORY NAVIGATION"
echo "- Create some history entries"
echo "- Use UP arrow to navigate history"
echo "- Verify history replaces your input area only"
echo "- Verify history NEVER deletes the prompt itself"
echo ""

echo -e "${BLUE}STEP 4: SPECIFIC TEST SCENARIOS${NC}"
echo "==============================================================================="
echo ""
echo "When lusush starts, pay attention to these scenarios:"
echo ""
echo "SCENARIO A: Basic Backspace"
echo "1. Type: 'hello world test'"
echo "2. Press backspace 5 times (should delete 'test ')"
echo "3. Result should be: 'hello world' (prompt unchanged)"
echo ""
echo "SCENARIO B: Complete Backspace"
echo "1. Type: 'some text here'"
echo "2. Press backspace until all YOUR text is gone"
echo "3. Result should be: empty input (prompt unchanged)"
echo ""
echo "SCENARIO C: History with Backspace"
echo "1. Type: 'echo first' and press Enter"
echo "2. Type: 'echo second' and press Enter"
echo "3. Press UP arrow (should show 'echo second')"
echo "4. Press backspace 3 times (should delete 'ond')"
echo "5. Result should be: 'echo sec' (prompt unchanged)"
echo ""
echo "SCENARIO D: Multiple History Navigation"
echo "1. Use UP arrow multiple times"
echo "2. Use DOWN arrow multiple times"
echo "3. Each navigation should replace input area only"
echo "4. Prompt should remain completely intact"
echo ""

echo -e "${YELLOW}IMPORTANT OBSERVATIONS TO MAKE:${NC}"
echo "==============================================================================="
echo ""
echo "✅ CORRECT BEHAVIOR (FIXED):"
echo "- Backspace only deletes characters you typed"
echo "- History navigation only replaces your input area"
echo "- Prompt structure remains completely intact"
echo "- No characters before your input area are affected"
echo ""
echo "❌ INCORRECT BEHAVIOR (OLD BUG):"
echo "- Backspace deletes backward into the prompt"
echo "- History navigation corrupts the prompt"
echo "- Username, hostname, or directory info gets deleted"
echo "- Prompt structure gets mangled"
echo ""

echo -e "${BLUE}STEP 5: TECHNICAL VERIFICATION${NC}"
echo "==============================================================================="
echo ""
echo "The fix changed these functions in src/linenoise/linenoise.c:"
echo ""
echo "OLD CODE (BROKEN):"
echo "  write(l->ofd, l->prompt, l->plen);  // Used column width"
echo ""
echo "NEW CODE (FIXED):"
echo "  write(l->ofd, l->prompt, strlen(l->prompt));  // Uses string length"
echo ""
echo "This ensures the entire prompt string is written correctly,"
echo "not just a calculated column width portion."
echo ""

echo -e "${GREEN}READY TO TEST${NC}"
echo "==============================================================================="
echo ""
echo "Press Enter to start lusush and test the prompt length fix..."
echo ""
echo "Remember to test:"
echo "1. Backspace operations (should only delete your input)"
echo "2. History navigation (should only replace your input)"
echo "3. Mixed operations (backspace + history)"
echo "4. Complete input deletion (should leave prompt intact)"
echo ""
echo "Type 'exit' when you're finished testing."
echo ""
read -r

echo -e "${YELLOW}Starting lusush...${NC}"
echo ""
$LUSUSH_BIN

echo ""
echo "==============================================================================="
echo -e "${BLUE}POST-TEST VERIFICATION${NC}"
echo "==============================================================================="
echo ""
echo "Please confirm the following:"
echo ""
echo "1. Did backspace only delete your typed text? (Y/N)"
echo "2. Did backspace leave the prompt completely intact? (Y/N)"
echo "3. Did history navigation only replace your input area? (Y/N)"
echo "4. Did history navigation leave the prompt intact? (Y/N)"
echo "5. Were you able to delete all your input without affecting the prompt? (Y/N)"
echo ""
echo "If you answered 'Y' to all questions:"
echo -e "${GREEN}✓ PROMPT LENGTH FIX IS WORKING CORRECTLY!${NC}"
echo ""
echo "If you answered 'N' to any question:"
echo -e "${RED}✗ PROMPT LENGTH FIX NEEDS FURTHER ATTENTION${NC}"
echo ""
echo "==============================================================================="
echo -e "${BLUE}TECHNICAL DETAILS OF THE FIX${NC}"
echo "==============================================================================="
echo ""
echo "The root cause was a confusion between two different length values:"
echo ""
echo "• l->plen: Calculated column width of prompt (for cursor positioning)"
echo "• strlen(l->prompt): Actual string length of prompt (for terminal output)"
echo ""
echo "When writing the prompt to the terminal, we need the full string length,"
echo "not just the calculated column width. The column width is used for"
echo "cursor positioning calculations, but the string length is needed for"
echo "the actual write() operation."
echo ""
echo "This fix ensures that:"
echo "- The complete prompt string is written to the terminal"
echo "- No part of the prompt is truncated or missing"
echo "- Backspace and history operations work within the input area only"
echo "- The prompt structure remains visually and functionally intact"
echo ""
echo "==============================================================================="
echo -e "${GREEN}LUSUSH PROMPT LENGTH FIX VERIFICATION COMPLETE${NC}"
echo "==============================================================================="
