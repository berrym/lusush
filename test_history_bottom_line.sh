#!/bin/bash

# Specific test for history navigation line consumption at bottom of terminal
# This test focuses on the specific issue: "history consuming one line above from the bottom"

echo "==============================================================================="
echo "LUSUSH HISTORY BOTTOM-LINE CONSUMPTION TEST"
echo "==============================================================================="
echo ""

LUSUSH_BIN="./builddir/lusush"

if [ ! -f "$LUSUSH_BIN" ]; then
    echo "‚ùå ERROR: LUSUSH binary not found at $LUSUSH_BIN"
    echo "Please build first with: ninja -C builddir"
    exit 1
fi

echo "üéØ TARGET ISSUE: History navigation consuming one line above from bottom"
echo ""
echo "This test specifically targets the history line consumption issue"
echo "that occurs when the prompt is at the bottom of the terminal."
echo ""

echo "==============================================================================="
echo "TEST SETUP"
echo "==============================================================================="
echo ""
echo "üìè Current terminal size: $(tput lines 2>/dev/null || echo '?')x$(tput cols 2>/dev/null || echo '?')"
echo "üñ•Ô∏è  Terminal type: $TERM"
echo "üíª Terminal program: $(ps -p $PPID -o comm= 2>/dev/null || echo 'unknown')"
echo ""

echo "==============================================================================="
echo "STEP 1: SETUP TEST ENVIRONMENT"
echo "==============================================================================="
echo ""
echo "We'll fill your terminal with numbered marker lines so you can"
echo "observe exactly which lines get consumed during history navigation."
echo ""

# Calculate how many lines to fill based on terminal height
TERM_HEIGHT=$(tput lines 2>/dev/null || echo 20)
FILL_LINES=$((TERM_HEIGHT + 5))  # Fill more than terminal height to ensure bottom position

echo "üìÑ Filling terminal with $FILL_LINES marker lines..."
echo ""

for i in $(seq 1 $FILL_LINES); do
    echo "MarkerLine $i: This line should NEVER be consumed by history navigation"
done

echo ""
echo "üéØ IMPORTANT: Look at the marker lines above!"
echo "   - Note the HIGHEST line number you can see: ____"
echo "   - Note the LOWEST line number you can see: ____"
echo "   - The prompt should now be at or near the bottom of your terminal"
echo ""

echo "==============================================================================="
echo "STEP 2: INTERACTIVE HISTORY CONSUMPTION TEST"
echo "==============================================================================="
echo ""
echo "Now we'll test history navigation at the bottom line."
echo ""
echo "üöÄ STARTING LUSUSH..."
echo "   When lusush starts, the prompt will be at the bottom of your terminal."
echo ""
echo "üìù FOLLOW THESE STEPS EXACTLY:"
echo ""
echo "1. üìã CREATE HISTORY ENTRIES:"
echo "   Type: echo history1"
echo "   Press Enter"
echo "   Type: echo history2"
echo "   Press Enter"
echo "   Type: echo history3"
echo "   Press Enter"
echo ""
echo "2. üîç BASELINE CHECK:"
echo "   Before using arrow keys, look at the MarkerLine entries above"
echo "   Note the highest visible MarkerLine number: ____"
echo ""
echo "3. ‚¨ÜÔ∏è  TEST HISTORY NAVIGATION:"
echo "   Press UP arrow key once"
echo "   IMMEDIATELY check: Did any MarkerLine disappear?"
echo "   Expected to see: 'echo history3'"
echo ""
echo "   Press UP arrow key again"
echo "   IMMEDIATELY check: Did any MarkerLine disappear?"
echo "   Expected to see: 'echo history2'"
echo ""
echo "   Press UP arrow key again"
echo "   IMMEDIATELY check: Did any MarkerLine disappear?"
echo "   Expected to see: 'echo history1'"
echo ""
echo "4. ‚¨áÔ∏è  TEST REVERSE NAVIGATION:"
echo "   Press DOWN arrow key"
echo "   IMMEDIATELY check: Did any MarkerLine disappear?"
echo "   Expected to see: 'echo history2'"
echo ""
echo "   Press DOWN arrow key"
echo "   IMMEDIATELY check: Did any MarkerLine disappear?"
echo "   Expected to see: 'echo history3'"
echo ""
echo "5. üîÑ REPEAT TEST:"
echo "   Navigate UP and DOWN several more times"
echo "   After each arrow key press, check for missing MarkerLines"
echo ""
echo "6. üìä FINAL CHECK:"
echo "   Compare the visible MarkerLine numbers with your baseline"
echo "   Count how many MarkerLines were consumed (if any)"
echo ""
echo "7. üö™ EXIT:"
echo "   Type: exit"
echo ""

echo "==============================================================================="
echo "SPECIFIC OBSERVATIONS TO MAKE"
echo "==============================================================================="
echo ""
echo "üîç WHAT TO WATCH FOR:"
echo ""
echo "   ‚úÖ GOOD BEHAVIOR:"
echo "   ‚Ä¢ All MarkerLine entries remain visible throughout testing"
echo "   ‚Ä¢ History commands replace current line content cleanly"
echo "   ‚Ä¢ No lines disappear or get 'consumed'"
echo "   ‚Ä¢ Highest visible MarkerLine number stays the same"
echo ""
echo "   ‚ùå BAD BEHAVIOR (LINE CONSUMPTION):"
echo "   ‚Ä¢ MarkerLine entries disappear during arrow key navigation"
echo "   ‚Ä¢ The highest visible MarkerLine number decreases"
echo "   ‚Ä¢ 'One line above from bottom' gets consumed"
echo "   ‚Ä¢ Terminal content shifts upward unexpectedly"
echo ""
echo "   üéØ SPECIFIC TO REPORT:"
echo "   ‚Ä¢ Which arrow key press causes consumption (1st UP, 2nd UP, etc.)"
echo "   ‚Ä¢ How many lines are consumed each time"
echo "   ‚Ä¢ Whether it happens on every navigation or just occasionally"
echo "   ‚Ä¢ If DOWN arrows also cause consumption"
echo ""

echo "==============================================================================="
echo "READY TO START TEST"
echo "==============================================================================="
echo ""
echo "Press Enter to start LUSUSH and begin the test..."
read

echo ""
echo "üöÄ Starting LUSUSH..."
echo "   Follow the test procedure above and observe carefully!"
echo ""
echo "Starting in 3 seconds..."
sleep 1
echo "2..."
sleep 1
echo "1..."
sleep 1
echo ""

# Start LUSUSH for the test
$LUSUSH_BIN

echo ""
echo "==============================================================================="
echo "POST-TEST ANALYSIS"
echo "==============================================================================="
echo ""
echo "Now that you've completed the test, please answer these questions:"
echo ""
echo "üîç CONSUMPTION DETECTION:"
echo "   Did any MarkerLine entries disappear? (Y/N): ____"
echo "   If yes, how many lines were consumed? ____"
echo "   Which specific operation caused consumption? ____"
echo ""
echo "üîç TIMING:"
echo "   Did consumption happen on the first UP arrow? (Y/N): ____"
echo "   Did consumption happen on subsequent UP arrows? (Y/N): ____"
echo "   Did consumption happen on DOWN arrows? (Y/N): ____"
echo ""
echo "üîç PATTERN:"
echo "   Does consumption happen every time? (Y/N): ____"
echo "   Is it always exactly one line? (Y/N): ____"
echo "   Is it specifically 'one line above from bottom'? (Y/N): ____"
echo ""
echo "üîç BEFORE/AFTER COMPARISON:"
echo "   Baseline highest MarkerLine number: ____"
echo "   Final highest MarkerLine number: ____"
echo "   Total lines lost: ____"
echo ""

echo "==============================================================================="
echo "DIAGNOSTIC INFORMATION"
echo "==============================================================================="
echo ""
echo "üîß System Details:"
echo "   Terminal height: $(tput lines 2>/dev/null || echo 'unknown')"
echo "   Terminal width: $(tput cols 2>/dev/null || echo 'unknown')"
echo "   TERM variable: $TERM"
echo "   Terminal program: $(ps -p $PPID -o comm= 2>/dev/null || echo 'unknown')"
echo "   Fedora version: $(cat /etc/fedora-release 2>/dev/null || echo 'Not Fedora')"
echo ""
echo "üîß Test Results:"
echo "   If line consumption occurred, the issue is still present"
echo "   If no consumption occurred, the fix is working"
echo "   The specific pattern helps identify the root cause"
echo ""

echo "==============================================================================="
echo "NEXT STEPS"
echo "==============================================================================="
echo ""
echo "Based on your test results:"
echo ""
echo "üéØ IF NO CONSUMPTION OCCURRED:"
echo "   ‚úÖ The history bottom-line fix is working correctly!"
echo "   The issue has been resolved."
echo ""
echo "üéØ IF CONSUMPTION STILL OCCURRED:"
echo "   ‚ùå The issue persists and needs further refinement"
echo "   Please report the specific details above"
echo "   This information will help target the exact cause"
echo ""
echo "üéØ REPORTING:"
echo "   Please share your answers to the diagnostic questions"
echo "   Include any specific patterns or timing you observed"
echo "   Note if the behavior is consistent or intermittent"
echo ""

echo "==============================================================================="
echo "TEST COMPLETED"
echo "==============================================================================="
